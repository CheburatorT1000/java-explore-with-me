{
	"info": {
		"_postman_id": "a64ab97a-4b4c-4961-a9d7-ac3f97d03f58",
		"name": "feature_subscriptions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26745881"
	},
	"item": [
		{
			"name": "Добавление пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"Ivan Ivanov\", \r\n\"email\":\"ivan@hotmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление подписчика",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\":\"Petr Petrov\", \r\n\"email\":\"petr@hotmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Avon10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"annotation\": \"Placeat sit quia dignissimos est autem quia dicta. Est et dolorem porro eius. Praesentium id omnis impedit exercitationem et rerum neque facere eos.\",\r\n    \"category\": 1,\r\n    \"description\": \"Sequi animi perferendis commodi. Fuga molestias ipsam odio et neque iusto. Laboriosam aut consequatur est nemo vero. Vitae velit cumque alias et doloribus consequuntur dolorem aut sit. Aspernatur in ut ducimus suscipit quaerat odio atque.\\n \\rDolorem fugiat voluptatibus quo beatae atque quia. Quo sit pariatur adipisci ut neque enim nam soluta. Laborum sint quia unde ea. Non amet sed. Eius ab nihil dolor temporibus aspernatur quibusdam.\\n \\rConsectetur omnis ut sequi veritatis et. Dolor quia debitis quod eos odit facilis dolores totam. Voluptas quisquam sint voluptas omnis ut voluptas dolorum unde necessitatibus. Tenetur praesentium pariatur maiores officia et.\",\r\n    \"eventDate\": \"2024-04-07 06:10:24\",\r\n    \"location\": {\r\n        \"lat\": -68.2107,\r\n        \"lon\": -155.9262\r\n    },\r\n    \"paid\": \"true\",\r\n    \"participantLimit\": \"793\",\r\n    \"requestModeration\": \"false\",\r\n    \"title\": \"Et unde dolor aspernatur consectetur in iure modi eveniet magnam.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/1/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление подписки",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/subscriptions?publisherId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"subscriptions"
					],
					"query": [
						{
							"key": "publisherId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка наличия подписки",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
							"pm.expect(body).is.an('array'); // проверяем, что тело ответа является массивом\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/subscriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Отсутствие в событиях по подпискам неопубликованного события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); \r",
							"\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(body).is.empty; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/subscriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение состояния публикации",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"stateAction\":\"PUBLISH_EVENT\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка наличия события в подписках",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json();  \r",
							"\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", () => {\r",
							"    pm.expect(body).is.an('array');\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/subscriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Отмена подписки на пользователя",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/subscriptions/1/cancel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"subscriptions",
						"1",
						"cancel"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка отсутствия подписки",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); \r",
							"\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(body).is.empty; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/subscriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Отсутствие события в подписке",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const body = pm.response.json(); // получаем тело ответа в формате JSON\r",
							"// проверяем, что тело ответа является массивом\r",
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"    pm.expect(body).is.empty; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/2/events/subscriptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"2",
						"events",
						"subscriptions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Проверка отсутствия возможности подписаться на самого себя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 409 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(409); \r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/1/subscriptions?publisherId=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"subscriptions"
					],
					"query": [
						{
							"key": "publisherId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}